/* tslint:disable */
/* eslint-disable */
/**
 * Muisti API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Point,
    PointFromJSON,
    PointFromJSONTyped,
    PointToJSON,
    ScreenOrientation,
    ScreenOrientationFromJSON,
    ScreenOrientationFromJSONTyped,
    ScreenOrientationToJSON,
} from './';

/**
 * 
 * @export
 * @interface ExhibitionDevice
 */
export interface ExhibitionDevice {
    /**
     * 
     * @type {string}
     * @memberof ExhibitionDevice
     */
    readonly id?: string;
    /**
     * 
     * @type {string}
     * @memberof ExhibitionDevice
     */
    readonly exhibitionId?: string;
    /**
     * Index page for a device
     * @type {string}
     * @memberof ExhibitionDevice
     */
    indexPageId?: string;
    /**
     * Device group id
     * @type {string}
     * @memberof ExhibitionDevice
     */
    groupId: string;
    /**
     * Device model id
     * @type {string}
     * @memberof ExhibitionDevice
     */
    modelId: string;
    /**
     * 
     * @type {string}
     * @memberof ExhibitionDevice
     */
    name: string;
    /**
     * 
     * @type {Point}
     * @memberof ExhibitionDevice
     */
    location?: Point;
    /**
     * 
     * @type {ScreenOrientation}
     * @memberof ExhibitionDevice
     */
    screenOrientation: ScreenOrientation;
    /**
     * 
     * @type {string}
     * @memberof ExhibitionDevice
     */
    readonly creatorId?: string;
    /**
     * 
     * @type {string}
     * @memberof ExhibitionDevice
     */
    readonly lastModifierId?: string;
    /**
     * Created date
     * @type {Date}
     * @memberof ExhibitionDevice
     */
    readonly createdAt?: Date;
    /**
     * Date modified
     * @type {Date}
     * @memberof ExhibitionDevice
     */
    readonly modifiedAt?: Date;
}

export function ExhibitionDeviceFromJSON(json: any): ExhibitionDevice {
    return ExhibitionDeviceFromJSONTyped(json, false);
}

export function ExhibitionDeviceFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExhibitionDevice {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'exhibitionId': !exists(json, 'exhibitionId') ? undefined : json['exhibitionId'],
        'indexPageId': !exists(json, 'indexPageId') ? undefined : json['indexPageId'],
        'groupId': json['groupId'],
        'modelId': json['modelId'],
        'name': json['name'],
        'location': !exists(json, 'location') ? undefined : PointFromJSON(json['location']),
        'screenOrientation': ScreenOrientationFromJSON(json['screenOrientation']),
        'creatorId': !exists(json, 'creatorId') ? undefined : json['creatorId'],
        'lastModifierId': !exists(json, 'lastModifierId') ? undefined : json['lastModifierId'],
        'createdAt': !exists(json, 'createdAt') ? undefined : (new Date(json['createdAt'])),
        'modifiedAt': !exists(json, 'modifiedAt') ? undefined : (new Date(json['modifiedAt'])),
    };
}

export function ExhibitionDeviceToJSON(value?: ExhibitionDevice | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'indexPageId': value.indexPageId,
        'groupId': value.groupId,
        'modelId': value.modelId,
        'name': value.name,
        'location': PointToJSON(value.location),
        'screenOrientation': ScreenOrientationToJSON(value.screenOrientation),
    };
}


